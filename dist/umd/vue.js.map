{"version":3,"file":"vue.js","sources":["../../src/util/index.js","../../src/observer/array.js","../../src/observer/dep.js","../../src/observer/index.js","../../src/state.js","../../src/compiler/parser-html.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/util/next-tick.js","../../src/observer/schedular.js","../../src/observer/watcher.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/create-element.js","../../src/render.js","../../src/initGlobalAPI/mixin.js","../../src/initGlobalAPI/const.js","../../src/initGlobalAPI/assets.js","../../src/initGlobalAPI/extend.js","../../src/initGlobalAPI/index.js","../../src/index.js"],"sourcesContent":["export function isObject(data) {\n    return typeof data === 'object' && data !== null\n}\n\n\nexport function def(data, key, value) {\n    Object.defineProperty(data, key, {\n        enumerable: false, // 不可枚举\n        configurable: false, // 不可配置\n        value\n    })\n}\n\nexport function proxy(vm, source, key) {\n    Object.defineProperty(vm, key, {\n        get() {\n            return vm[source][key]\n        },\n        set(newValue) {\n            vm[source][key] = newValue;\n        }\n    })\n}\n\nexport function upper(all, letter) {\n    return letter.toUpperCase();\n}\n\nconst LIFECYCLE_HOOKS = [\n    'beforeCreate',\n    'created',\n    'beforeMount',\n    'mounted',\n    'beforeUpdate',\n    'updated',\n    'beforeDestroy',\n    'destroyed'\n]\n\n// 策略\nlet strats = {}\nLIFECYCLE_HOOKS.forEach(hook => {\n    // 根据key 执行 自定义函数\n    strats[hook] = mergeHook\n});\n\n// 组件策略 \nfunction mergeAssets(parentVal, childVal) {\n    const res = Object.create(parentVal); // res.__proto__ = parentVal;\n\n    if (childVal) {\n        for (let key in childVal) {\n            // 让组件 先找自己的局部组件,找不到根据原型链 网上找\n            res[key] = childVal[key]\n        }\n    }\n    return res;\n\n}\n// 所以全局组件 可以在任何地方用\nstrats.components = mergeAssets;\n\n\nfunction mergeHook(parentVal, childVal) {\n    if (childVal) {\n        if (parentVal) {\n            return parentVal.concat(childVal)\n        } else { // 新的有,老的没有 生命周期 返回 数组格式\n            return [childVal]\n        }\n\n    } else { // 没有子级 直接返回\n        return parentVal;\n    }\n}\n\n\n/**\n * @description: 合并对象 或其他类型\n * @param {*} parent \n * @param {*} child \n */\nexport function mergeOptions(parent, child) {\n    const options = {};\n\n    // 父是对象\n    for (let key in parent) {\n        mergeField(key)\n    }\n\n    for (let key in child) {\n        // 如果已经合并过了,就不需要再合并了\n        if (!parent.hasOwnProperty(key)) {\n            mergeField(key)\n        }\n    }\n\n\n    // 默认的合并策略 但有些属性 需要特殊的合并 生命周期的合并\n    function mergeField(key) {\n        // 如果你有 这个策略, 执行策略方法, 主要是用来处理生命周期; 因为其需要是一个数组 可一次执行\n        if (strats[key]) {\n            return options[key] = strats[key](parent[key], child[key])\n        }\n\n\n        if (typeof parent[key] == 'object' && typeof child[key] == 'object') {\n            options[key] = {\n                ...parent[key],\n                ...child[key]\n            }\n        } else if (child[key] == null) {\n            options[key] = parent[key];\n        } else { // 父为null 子为obj\n            options[key] = child[key]\n        }\n    }\n\n    return options;\n\n}\n\n\n// 如果是原生标签 返回true\nexport const isReservedTag = (tagName) => {\n    let str = 'p,div,span,input,button';\n    let obj = {}\n    str.split(\",\").forEach(tag => {\n        obj[tag] = true\n    })\n    return obj[tagName]\n}","\n/**\n * @Object.create 用来进行基于原型链的继承\n * 用户操作 vm._data.arr.push 就会在 重写的 arrayMethods 中找方法\n * value.__proto__ = arrayMethods \n * 如果 arrayMethods 找不到任何方法就会基于原型链向上找\n * arrayMethods.__proto__ = oldArrayMethods\n */\nlet oldArrayMethods = Array.prototype\nexport let arrayMethods = Object.create(oldArrayMethods)\n\n// 都会改变 原数组 , slice 不会\nconst methods = [\n    \"push\",\n    \"shift\",\n    \"unshift\",\n    \"pop\",\n    \"sort\",\n    \"splice\",\n    \"reverse\"\n]\n\nmethods.forEach(method => {\n    // 先调用 重写的arr 方法 AOP 切片\n    arrayMethods[method] = function (...args) {\n        // 再里面调用 原生的数组方法\n        const result = oldArrayMethods[method].apply(this, args)\n\n        let insert // 当前用户插入的元素\n        let ob = this.__ob__;\n\n        switch (method) {\n            case \"push\":\n            case \"unshit\":\n                insert = args; // 类数组 es6 ...args 参数\n                break;\n            case \"splice\":\n                insert = args.slice(2) // arr.splice(0,1,{name:1})\n            default:\n                break;\n        }\n        // 当新添对象的话 继续 观察 \n        if (insert) {\n            ob.observerArray(insert)\n        }\n\n\n        //  如果用户调用了 数组方法 就会通知当前的dep 去更新\n        ob.dep.notify();\n\n        return result\n    }\n\n})\n\n\n/**\n * @总结:\n * @Object.create 原型链继承\n * @AOP 切片编程方法\n */","let id = 0;\nclass Dep {\n    constructor() {\n        this.id = id++;\n        this.subs = [];\n    }\n    // 把 watcher 添加到 dep中\n    addSub(watcher) {\n        this.subs.push(watcher)\n    }\n\n    depend() {\n        // this.subs.push(Dep.target);\n        // 这里的 Dep.target 就是 watcher, 方法意思是把 Dep 添加到watcher里\n        Dep.target.addDep(this);\n    }\n\n    notify() {\n        // console.log(\"watcher this.subs--\", this.subs)\n        this.subs.forEach(watcher => watcher.update())\n\n        // wathcer 更新完就被移除了\n        // console.log(\"Dep.target-- notify after\", Dep.target)\n    }\n\n}\n\nDep.target\n\n\n// 栈\nlet stack = [];\nexport function pushTarget(watcher) {\n    Dep.target = watcher;\n    stack.push(watcher)\n\n}\n\n\n\nexport function popTarget() {\n    stack.pop();\n    Dep.target = stack[stack.length - 1];\n}\n\nexport default Dep;\n","import { isObject, def } from \"../util/index\"\nimport { arrayMethods } from \"./array.js\";\nimport Dep from \"./dep\"\n\n\nexport function observe(data) {\n    const isObj = isObject(data);\n    if (!isObj) {\n        return\n    }\n    return new Observer(data);\n}\n\nclass Observer {\n    constructor(value) {\n        /** 给数组用的 */\n        this.dep = new Dep();\n\n\n        // value.__proto__.ob = this; // 给每一个监控过得对象依次增加set get 方法\n\n        // 这里用数据存储器的方式 不让 该属性能枚举, 不然会死循环,因为存值是this,\n        // 被枚举时候 会访问到this  会不断调用walk=>observerArray 等\n        def(value, \"__ob__\", this);\n\n\n\n        if (Array.isArray(value)) {\n            // 如果是数组的话 并不会对索引进行观察,会导致性能问题,(数组里100个item 就要观察100次)\n            // 而且用户很可能操作 索引, (最少别操作索引)\n            // console.log(\"is Array\")\n\n            // 函数的劫持(代理),通过更改原型链上的 方法, arrayMethods内部再调用原生的方法 (push shift, unshift)\n            value.__proto__ = arrayMethods;\n            // 数组里放的对象 再监控\n            this.observerArray(value)\n\n        } else {\n            // console.log(\"is object\")\n            this.walk(value)\n        }\n\n    }\n\n    walk(data) {\n        // 拿到所有的对象 key 进行深度遍历 设置 get set\n        const keys = Object.keys(data);\n        keys.forEach(key => {\n            defineReactive(data, key, data[key])\n        })\n    }\n\n    // 观察数组\n    observerArray(value) {\n        // 遍历数组每一项值, 非引用类型除外, 观察的是 每一个对象\n        for (let i = 0; i < value.length; i++) {\n            observe(value[i])\n        }\n    }\n}\n\nfunction dependArray(value) {\n    for (let i = 0; i < value.length; i++) {\n        let current = value[i]; // 数组中每一个都取出 收集依赖\n        current.__ob__ && current.__ob__.dep.depend()\n        if (Array.isArray(current)) { // 递归数组中的数组 依赖收集\n            dependArray(current);\n        }\n    }\n}\n\nfunction defineReactive(data, key, value) {\n\n    // 这个dep 是给对象使用的\n    let dep = new Dep();\n\n    /**\n     * @observe :  对data里对象进行递归深度遍历观察; 其返回值是ovserver实例\n     * @value: value可能是数组也可能是对象\n     */\n    let childOb = observe(value)\n\n    /**\n     * @数据描述器 \n     * Object.defineProperty(obj,\"newKey\",{\n     * get:function (){} | undefined,\n     * set:function (value){} | undefined\n     * configurable: true | false\n     * enumerable: true | false\n    });\n     * @注意 当使用了getter或setter方法，不允许使用writable和value这两个属性\n     * \n     */\n    Object.defineProperty(data, key, {\n        configurable: true,\n        enumerable: true, // 这里要设置为true 不然 vm里data里的对象展示不出来\n        get() {\n            if (Dep.target) { // 如果当前有watcher\n                dep.depend(); // 表示要将watcher存起来\n\n                // 收集数组的相关依赖\n                if (childOb) {\n                    childOb.dep.depend()\n\n                    if (Array.isArray(value)) {\n                        dependArray(value)\n                    }\n                }\n            }\n\n            return value\n        },\n        // 操作 去设置值 \n        set(newValue) {\n            // 监听变化\n            console.log(\"监听变化\")\n            // 浅比较 相等 就不继续执行\n            if (newValue == value) return\n            // @注意!!! 如果用户直接修改 data 上的对象为一个新的对象,需要继续 observe\n            observe(newValue)\n\n            // 这里的 value 是闭包引用,直接修改即可\n            value = newValue;\n\n            dep.notify(); // 通知依赖的watcher 来更新\n        }\n    })\n}","import { observe } from \"./observer/index\"\nimport { proxy } from \"./util/index\"\n/**\n * \n * @param {*} vm 传入实例\n * 初始化状态: 包含 props data computed watch (传入 Vue 里的 options 含有的都需要初始化)\n */\nexport function initState(vm) {\n\n    const opts = vm.$options;\n\n    if (opts.props) {\n        initProps(vm);\n    }\n\n    if (opts.data) {\n        initData(vm);\n    }\n\n    if (opts.methods) {\n        initMethods(vm);\n    }\n    if (opts.computed) {\n        initComputed(vm);\n    }\n\n    if (opts.watch) {\n        initWatch(vm);\n    }\n\n}\n\nfunction initProps() { }\n\n\n// 初始化数据\nfunction initData(vm) {\n\n    let data = vm.$options.data;\n    data = vm._data = typeof data == 'function' ? data() : data\n    // 对象劫持, 用户改变了数据,希望可以监听到,得到通知 ==> 去更新视图View\n    console.log(\"data--\", data)\n\n    //为零让用户更好的使用, 希望直接 vm.xx;  走代理模式\n    for (let key in data) {\n        // 代理 _data 转移取值\n        proxy(vm, '_data', key)\n    }\n\n\n\n\n    // MVVM模式 数据变化 驱动视图变化\n    // 用 Object.defineProperty 给给对象的属性增加get 和set方法\n    observe(data)\n\n}\n\nfunction initMethods() { }\n\nfunction initComputed() { }\n\nfunction initWatch() { }\n","const ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*` // abc-aaa\n\nconst gnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // <awdawd:awfwdw>\n\nconst startTagopen = new RegExp(`^<${gnameCapture}`); // 标签开头的正则 捕获的内容是标签名 \n\nconst endTag = new RegExp(`^<\\\\/${gnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\n\n// 匹配属性  id = \"app\"  id = 'app'  id = app 三种可能\n//                 空格 + 非\"'<>=       不捕获 空格 =\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)’+|([^\\s\"'=<>`]+)))?/;\n\nconst startTagclose = /^\\s*(\\/?)>/; // 匹配标签结束 空格 + /> \n\n\n\nexport function parseHTML(html) {\n\n    let root = null; // ast语法树\n    let currentParent; // 标识当前父亲是谁\n    const ELEMENT_TYPE = 1\n    const TEXT_TYPE = 3\n    let stack = []; // 主要用于看是否为正常的 关闭的标签; 栈结构 先进后出\n\n\n    // ast html节点\n    function createASTElement(tagName, attrs) {\n        return {\n            tag: tagName,\n            type: ELEMENT_TYPE,\n            children: [],\n            attrs,\n            parent: null\n        }\n    }\n\n    function start(tagName, attrs) {\n        // 遇到开始标签,就创建一个ast元素\n        let element = createASTElement(tagName, attrs);\n        // 如果一上来没有root\n        if (!root) {\n            root = element;\n        }\n        currentParent = element;\n        stack.push(element);\n\n    }\n\n    function chars(text) {\n        text = text.replace(/\\s/g, '');\n        if (text) {\n            currentParent.children.push({\n                text,\n                type: TEXT_TYPE\n            })\n        }\n    }\n\n\n    // <div><p></p></div>  [div]\n    function end(tagName) {\n        //  栈结构 当遇到结尾的标签 就弹出\n        let element = stack.pop();\n        currentParent = stack[stack.length - 1];\n        // 如果父节点存在,即可标明父子关系\n        if (currentParent) {\n            // 实现一个树的父子 关系\n            element.parent = currentParent;\n            currentParent.children.push(element);\n        }\n\n    }\n\n\n    // 不停解析html字符串\n    while (html) {\n        let textEnd = html.indexOf(\"<\");\n\n        // 解析开始标签 + 属性\n        // 默认开头的标签 <\n        if (textEnd == 0) {\n            // 如果索引为0,肯定是一个标签, 开始标签 || 结束标签\n            let startTagMatch = parseStartTag() // 获取到匹配的标签名, tagName 属性attr\n\n            if (startTagMatch) {\n                // console.log(\"startTagMatch---\", startTagMatch)\n                start(startTagMatch.tagName, startTagMatch.attrs)\n                // 匹配到开头标签, continue 跳过循环 继续下一个循环\n                continue\n            }\n            let endTagMatch = html.match(endTag);\n            // 匹配到 </ 结束标签\n            if (endTagMatch) {\n                // 删除结束标签, 比如 删除 <div> </div> \n                advance(endTagMatch[0].length)\n                end(endTagMatch[1]) // 2 解析结束标签\n                continue\n            }\n        }\n\n        // 文本\n        let text;\n        // 匹配到 <p 之前的文本\n        if (textEnd >= 0) {\n            text = html.substring(0, textEnd)\n        }\n        if (text) {\n            advance(text.length);\n            chars(text); // 3 解析文本\n        }\n\n\n    }\n    // 截掉n之前的字符串\n    function advance(n) {\n        html = html.substring(n)\n    }\n\n    // 遍历 html 字符串 生成 节点+属性\n    function parseStartTag() {\n        /**\n         * 1.匹配 tagName\n         */\n\n        // 匹配出来 是一个 数组  ['<div','div', index:0, input: \"<div id =\"app\"\",xxxx]\n        let start = html.match(startTagopen)\n        if (start) {\n            // 设置一个对象来接受\n            const match = {\n                tagName: start[1],\n                attrs: []\n            }\n            // eg: <div . length, 为了把html 字符串 前面匹配过的 截掉\n            advance(start[0].length)\n\n            /**\n             * 2.匹配 属性\n            */\n            let end, attr\n            // 没有匹配到结束标签 且有 属性 attr\n            while (!(end = html.match(startTagclose)) && (attr = html.match(attribute))) {\n                advance(attr[0].length);// 属性去掉\n                match.attrs.push({\n                    name: attr[1],\n                    value: attr[3] || attr[4] || attr[5]\n                })\n            }\n            if (end) {\n                // console.log(\"end---\", end)\n                advance(end[0].length)\n                return match\n            }\n        }\n    }\n\n    // 返回根节点\n    return root;\n}\n\n\n/**\n * 匹配规则 html 为 语法树结构:\n * <div id=\"app\">\n     <p>hello</p>\n   </div>\n *\n * \nlet root = {\n    tag: 'div',\n    attrs: [{ name: 'id', value: 'app' }],\n    parent: null,\n    type: 1, // nodeType 节点为1  属性为2 文本为3\n    children: [{\n        tag: 'p',\n        attrs: [],\n        parent: root,\n        children: [\n            {\n                text: 'hello',\n                type: 3\n            }\n        ]\n    }]\n}\n * \n *   \n */","import { upper } from \"../util/index.js\"\n\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g  // 匹配 {{}}\n\n\nfunction genProps(attrs) {\n    let str = '';\n    // attrs 是数组 格式 eg: [{name:id,value: 'app'},{name:style,value: \" color:red;fontSize:14; \"}] \n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i]\n\n        // style=\"color:red;font-size:14;\" ===>  {style:{color: 'red'}}\n        // style 特殊处理\n        if (attr.name === 'style') {\n            let obj = {};\n            // attr.value =  color:red;font-size:14; ==> 转成 obj\n            attr.value.split(\";\").forEach(item => {\n                let [key, value] = item.split(\":\");\n                // 处理特殊key名,eg: font-size ==> fontSize\n                if (key.indexOf(\"-\") > -1) {\n                    // replace 第二参数 可以穿函数, 函数参数:(匹配到的值,第二个是捕获到的)\n                    key = key.replace(/-(\\w)/g, upper)\n                }\n                obj[key] = value;\n            });\n            // 改写 attr的 value\n            attr.value = obj;\n        }\n        // 任何属性 key:value 形式 拼接; 每一个都接逗号\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0, -1)}}` // 最后一项 逗号不要\n}\n\n\nfunction genChildren(el) {\n    let children = el.children;\n    if (children && children.length > 0) {\n        return `${children.map(c => gen(c)).join(',')}`\n    } else {\n        return false\n    }\n}\n\n\nfunction gen(node) {\n    // 递归匹配\n    if (node.type == 1) {\n        return generate(node)\n    } else {\n\n        // exec 正则循环匹配 会有问题 ,lastIndex问题\n        // _v(\"a\"+_s(name)+\"b\"+_s(age)+\"c\")\n\n        let text = node.text; // eg: a {{name}} b {{age}} c\n        let tokens = []; // 是用来存 每一个 text 比如 a, {{name}} 等\n        let match, index;\n        let lastIndex = defaultTagRE.lastIndex = 0; // 只要是全局匹配 就需要将lastIndex 每次调到0\n\n        // 匹配不到 就为 null 结束循环\n        while (match = defaultTagRE.exec(text)) {\n            index = match.index;\n            if (index > lastIndex) {\n                // 截取字符串\n                tokens.push(JSON.stringify(text.slice(lastIndex, index)));\n            }\n            tokens.push(`_s(${match[1].trim()})`);\n\n            // 重新设置偏移量 = 匹配到的起始index + 匹配到的长度\n            lastIndex = index + match[0].length;\n        }\n        // 如果没有匹配到最后, 直接把后面的全部push 到tokens里\n        if (lastIndex < text.length) {\n            tokens.push(JSON.stringify(text.slice(lastIndex)))\n        }\n        console.log(\"tokens----\", tokens);\n        // 最后 全部 用 + 号 连起来\n        return `_v(${tokens.join(\"+\")})`\n    }\n\n}\n\n\n\nexport function generate(el) {\n\n    let children = genChildren(el);\n\n    let code = `_c(\"${el.tag}\",\n    ${el.attrs.length ? genProps(el.attrs) : 'undefined'}\n    ${children ? `,${children}` : \"\"})`\n    return code\n}","import { parseHTML } from \"./parser-html.js\"\nimport { generate } from \"./generate.js\";\n\n\nexport function compileToFunction(template) {\n    console.log(\"compile\", template)\n    // 1.把html字符串 转为 ast语法树 \n    let root = parseHTML(template)\n    // console.log('root---', root)\n\n\n\n    // 2.把 ast语法树 生成最终的 render函数 就是字符串拼接(模版引擎)\n    // <div id=\"app\"><p>hello {{name}}</p> hello </div>\n    // 将ast树,再次转化为 js语法 ,核心思路就是将模版转化为 下面字符串:\n    // _c(\"div\",{id:app},_c(\"p\",undefined,_v('hello' + _s(name) )),_v('hello'))\n\n    let code = generate(root)\n\n    // console.log(\"code--\", code)\n\n    // 所有 模版引擎实现: 都需要 new Function + with\n\n    // render 函数 返回的就是 虚拟dom  且 _c, _s _v 创建的都是一个个虚拟dom\n    let renderFn = new Function(`with(this){ return ${code}}`)\n\n\n    return renderFn\n}","let callbacks = [];\nlet waiting = false;\n\nfunction flushCallback() {\n    waiting = false;\n    const copies = callbacks.slice(0);\n    // 置空\n    callbacks.length = 0;\n    for (let i = 0; i < copies.length; i++) {\n        copies[i]();\n    }\n}\n\n\n\nlet timerFunc;\n\nif (typeof Promise !== 'undefined') {\n    const p = Promise.resolve();\n    timerFunc = function () {\n        p.then(flushCallback)\n    }\n\n} else if (typeof setImmediate !== 'undefined') {\n    timerFunc = () => {\n        setImmediate(flushCallback)\n    }\n} else {\n    timerFunc = () => {\n        setTimeout(flushCallback, 0)\n    }\n}\n\n\n\n// 项目初始化的时候 ,代码里写的 set属性, 或者用户自己执行$nextTick 都会往队列里塞cb;  这里需要拦截,因为代码里面会循环调用 队列里的 callback;不然会多次调用\nexport function nextTick(cb, ctx) {\n    let _resolve;\n\n    // 队列 push 只要有 就往里 push;\n    function fun() {\n        if (cb) {\n            cb.call(ctx)\n        }\n    }\n    callbacks.push(fun);\n\n\n\n    // 这里为了避免 异步函数 还没 被调用完 一种节流机制\n    if (waiting === false) {\n        waiting = true;\n        // 执行并清空\n        timerFunc()\n    }\n\n    // 当没有cb 可以提供Promise形式\n    /**\n     * vm.$nextTick().then(() => { })\n     */\n    if (!cb && typeof Promise !== 'undefined') {\n        console.log(\"参数---\", Array.prototype.slice.apply(arguments));\n        return new Promise(resolve => {\n            resolve()\n            _resolve = resolve\n        })\n    }\n}\n","import { nextTick } from \"../util/next-tick\";\n\n\nlet quene = []; //队列存放watcher\nlet has = {};\n\n\n\nfunction flushSchedularQueue() {\n    console.log(\"flushSchedularQueue--\")\n    quene.forEach(watcher => watcher.run());\n    // 清空 队列 和 挂载对象\n    quene = [];\n    has = {};\n}\n\nexport function queueWatcher(watcher) {\n    const id = watcher.id;\n    // 同一个watcher 需要过滤;\n    if (!has[id]) {\n        quene.push(watcher);\n        has[id] = true;\n        // 单线程 等同步执行完以后 callback, 在下一个事件队列 执行;\n        nextTick(flushSchedularQueue, watcher)\n    }\n}","import { pushTarget, popTarget } from \"./dep.js\"\nimport { queueWatcher } from \"./schedular\"\n\n\nlet id = 0;\nclass Watcher {\n    constructor(vm, exprOrFn, callback, options) {\n        this.id = id++;\n        this.vm = vm;\n        this.callback = callback;\n        this.options = options;\n        this.getter = exprOrFn;\n\n        // dep 相关\n        this.depsId = new Set() // 唯一性 去重\n        this.deps = [];\n\n        this.get();\n\n    }\n    addDep(dep) {\n        let id = dep.id;\n        // 解决watcher 重复存放的问题\n        if (!this.depsId.has(id)) {\n            this.depsId.add(id);\n            this.deps.push(dep);\n\n            // 调用 dep 方法;把watcher 存到dep里 (避免重复存放)\n            dep.addSub(this);\n        }\n    }\n\n    get() {\n        pushTarget(this); // 把watcher 存起来\n        this.getter(); // 渲染watcher的执行\n\n        popTarget(); // 移除watcher\n    }\n\n    // 有可能会被 多次调用 update 所以要过滤\n    update() {\n        // 等待着\n        // this.get()\n        // console.log(\"update---------\")\n        queueWatcher(this);\n    }\n\n    run() {\n        this.get();\n    }\n}\n\nexport default Watcher","// 渲染成真实dom\nexport function patch(oldVnode, vnode) {\n    // 1.判断是更新还是渲染\n\n    if (!oldVnode) {\n        // 这个是组件的挂载 又叫 空挂载  empty mount (likely as component) \n        console.log(\"组件vnode---\", vnode)\n        return createElm(vnode)\n    } else {\n        // 因为虚拟节点是 没有 nodeType的\n        const isRealElement = oldVnode.nodeType\n\n        // 真实dom\n        if (isRealElement) {\n            const oldElm = oldVnode; // app\n            const parentElm = oldElm.parentNode // body\n\n            let el = createElm(vnode);\n            parentElm.insertBefore(el, oldElm.nextSibling) // 紧跟app 组件之后,插入el\n\n            parentElm.removeChild(oldElm) // 删除老的 app\n\n            // 需要将渲染好的dom 返回\n            return el;\n\n        } else {\n            // 如果标签不一样 直接把自身替换掉,为新虚拟节点真实的dom\n            if (oldVnode.tag !== vnode.tag) {\n                // createElm(vnode) 生成最新的dom 去替换老的 el\n                oldVnode.el.parentNode.replaceChild(createElm(vnode), oldVnode.el);\n            }\n\n            // 如果没有标签, 只是文本, 内容不一致的话\n            if (!oldVnode.tag) {\n                if (oldVnode.text !== vnode.text) {\n                    oldVnode.el.texContent = vnode.text;\n                }\n            }\n\n            // 标签一致 且不是文本; 修改属性\n\n            // 让旧dom节点 赋值给 新的虚拟节点 el\n            let el = vnode.el = oldVnode.el;\n            // 更新属性\n            updateProperties(vnode, oldVnode.data);\n\n\n            // 比对子节点\n            let oldChildren = oldVnode.children || [];\n            let newChildren = vnode.children || [];\n\n            // 新老都有儿子, 需要比对里面儿子\n            if (oldChildren.length > 0 && newChildren.length > 0) {\n                updateChildren(el, oldChildren, newChildren);\n\n            } else if (newChildren.length > 0) {\n\n                // 新的有孩子,老的没孩子 直接将孩子虚拟节点转化为真实节点 插入即可;\n                for (let i = 0; i < newChildren.length; i++) {\n                    let child = newChildren[i];\n                    // createElm 虚拟节点\n                    el.appendChild(createElm(child));\n                }\n\n            } else if (oldChildren.length > 0) {\n                // 老的有孩子, 新的没有孩子; 直接置空\n                el.innerHTML = '';\n            }\n\n        }\n    }\n\n}\n\nfunction isSameVnode(oldVnode, newVnode) {\n    return oldVnode.tag === newVnode.tag && oldVnode.key === newVnode.key;\n}\n\n\nfunction makeIndexByKey(children) {\n    let map = {}\n    children.forEach((item, index) => {\n        if (item.key) {\n            map[item.key] = index; //根据key创建映射表\n        }\n    })\n    return map\n}\n\n// 比对新老子节点 vue 采用双指针方式\nfunction updateChildren(parent, oldChildren, newChildren) {\n\n    // 第一个指针指向oldVnode 开头\n    let oldStartIndex = 0;\n    let oldStartVnode = oldChildren[0];\n    let oldEndIndex = oldChildren.length - 1;\n    let oldEndVnode = oldChildren[oldEndIndex];\n\n    // 第二个指针指向 newVnode 开头\n    let newStartIndex = 0;\n    let newStartVnode = newChildren[0];\n    let newEndIndex = newChildren.length - 1;\n    let newEndVnode = newChildren[newEndIndex];\n\n\n    // 暴力比对 用的 把老的vnode 做成以key为键的对象\n\n    let map = makeIndexByKey(oldChildren); \n\n    // 在比对过程中 新老虚拟几点 有一方循环完毕 就结束\n    while (oldStartIndex <= oldEndIndex && newStartIndex <= newEndIndex) {\n\n        //在老指针移动过程中 可能会遇到 我们设置的undefined的情况 就跳过\n        if (!oldStartVnode) {\n            oldStartVnode = oldChildren[++oldStartIndex];\n        } else if (!oldEndVnode) { // 反向操作\n            oldEndVnode = oldChildren[--oldEndIndex]\n        }\n        // 优化向后插入的情况\n        if (isSameVnode(oldStartVnode, newStartVnode)) {\n            // 如果是同一节点 就需要比对这个元素的属性; 递归深度比较\n            patch(oldStartVnode, newStartVnode);\n            // 循环完 下一次 跟进\n            oldStartVnode = oldChildren[++oldStartIndex];\n            newStartVnode = newChildren[++newStartIndex];\n\n            // 优化向前插入的情况\n        } else if (isSameVnode(oldEndVnode, newEndVnode)) {\n            patch(oldEndVnode, newEndVnode)\n            oldEndVnode = oldChildren[--oldEndIndex];\n            newEndVnode = newChildren[--newEndIndex];\n        }\n        // 头移尾 A移动到了最后\n        /**\n         * A B C D\n         * B C D A\n         */\n        else if (isSameVnode(oldStartVnode, newEndVnode)) {\n            patch(oldStartVnode, newEndVnode)\n            // 把A元素 移动到 旧vnode最后一个元素下一个的 前面;\n            parent.insertBefore(oldStartVnode.el, oldEndVnode.el.nextSibling);\n            // 移动完 结束本次循环\n            oldStartVnode = oldChildren[++oldStartIndex];\n            newEndVnode = newChildren[--newEndIndex];\n\n            // 尾移头\n        } else if (isSameVnode(oldEndVnode, newStartVnode)) {\n            patch(oldEndVnode, newStartVnode);\n            // 把旧vnode 最后一个 移动到 最前面\n            parent.insertBefore(oldEndVnode.el, oldStartVnode.el);\n            oldEndVnode = oldChildren[--oldEndIndex];\n            newStartVnode = newChildren[++newStartIndex]\n        } else {\n\n            // 暴力比对\n            // 现根据老节点key,做一个映射表,拿新的虚拟节点去映射表查找,如果可以查到,则进行移动(移到头指针前面位置)如果找不到就在头指针插入新元素)\n            // 拿到移动到索引\n            let moveIndex = map[newStartVnode.key];\n            if (!moveIndex) { // 在旧vnode里没有 就再前插入\n                parent.insertBefore(createElm(newStartVnode), oldStartVnode.el);\n\n            } else { // 需要复用\n                // 这种情况是 头,尾节点都不一样 乱序情况下,在映射表中查找到了,则直接将元素移走\n                let moveVnode = oldChildren[moveIndex]; // 所以要拿到这个需要移动的dom\n                // 为了避免循环塌陷,还要移动完以后, 设置为空\n                oldChildren[moveIndex] = undefined;\n                parent.insertBefore(moveVnode.el, oldStartVnode.el);// 放在头指针前面\n\n            }\n            // 最后 移动指针 准备下次循环\n            newStartVnode = newChildren[++newStartIndex];\n\n        }\n\n    }\n\n    // 新vnode 数量 大于 旧vnode\n    if (newStartIndex <= newEndIndex) {\n        for (let i = newStartIndex; i <= newEndIndex; i++) {\n\n            // 正常情况下 向后找元素 到最后一位 为null 如果向前插入;  newChildren[newEndIndex + 1] 为首元素, 取其eldom元素\n            let insertNode = newChildren[newEndIndex + 1] == null ? null : newChildren[newEndIndex + 1].el;\n            if (insertNode == null) {\n                // 将新增元素 直接进行插入\n                // parent.appendChild(createElm(newChildren[i]));\n                parent.insertBefore(createElm(newChildren[i], null))\n            } else {\n                // 向前插入元素, 从尾巴开始比对 向左移动 \n                /**\n                 *     A B C D\n                 *  \n                 *   E A B C D     \n                 */\n                console.log(\"parent--\", newChildren[newEndIndex + 1])\n                parent.insertBefore(createElm(newChildren[i]), insertNode)\n            }\n        }\n    }\n\n    // 删除旧dom的一些 操作\n    if (oldStartIndex <= oldEndIndex) {\n        for (let i = oldStartIndex; i <= oldEndIndex; i++) {\n            let child = oldChildren[i];\n            if (child !== undefined) {\n                parent.removeChild(child.el);\n            }\n        }\n    }\n\n}\n\n\n\nfunction createComponent(vnode) {\n    // 创建组件的实例\n    let i = vnode.data;\n    if ((i = i.hook) && (i = i.init)) {\n        // 执行 组件内部自定义 声明周期\n        i(vnode)\n    }\n    if (vnode.componentInstance) {\n        return true\n    }\n}\n\n\n\n// 根据虚拟节点 创建 真实的 dom节点\n// 递归创建\nexport function createElm(vnode) {\n    let { tag, children, key, data, text } = vnode;\n    if (typeof tag == 'string') {\n\n        // 实例化组件\n        if (createComponent(vnode)) {\n            return vnode.componentInstance.$el;\n        }\n\n\n        // 创建标签\n        vnode.el = document.createElement(tag);\n        // 把属性 也展示到 dom页面效果上\n        updateProperties(vnode);\n\n        // 递归子节点\n        children.forEach(child => {\n            // 把子节点 一个个 塞到 父节点里;递归 调用\n            return vnode.el.appendChild(createElm(child))\n        })\n\n    } else {\n        // 虚拟dom 映射真实dom 方便后续更新操作\n        vnode.el = document.createTextNode(text);\n    }\n    return vnode.el;\n}\n\n// 更新属性\nfunction updateProperties(vnode, oldProps = {}) {\n    let newProps = vnode.data || {};\n    let el = vnode.el;\n\n    // 如果在dom上 老的属性有,新的属性没有,在真实dom上将这个属性 直接删除掉\n    let newStyle = newProps.style || {}\n    let oldStyle = oldProps.style || {};\n\n    // 特殊处理 style的\n    for (let key in oldStyle) {\n        if (!newStyle[key]) {\n            el.style[key] = ''\n        }\n    }\n\n    // 处理普通属性\n    for (let key in oldProps) {\n        if (!newProps[key]) {\n            el.removeAttribute(key);\n        }\n    }\n\n    // 循环添加样式 到dom el 上\n    for (let key in newProps) {\n        if (key == 'style') {\n            for (let styleName in newProps.style) {\n                el.style[styleName] = newProps.style[styleName]\n            }\n        } else if (key === 'class') {\n            el.className = newProps.class;\n        } else {\n            el.setAttribute(`${key}`, newProps[key])\n        }\n    }\n}\n\n\n\n\n/**\n * 注意:\n * 1.nextSibling 属性可返回某个元素之后紧跟的节点（处于同一树层级中）\n *\n *2 .Node.insertBefore(a,b) 在参考节点(b)之前插入一个拥有指定父节点的子节 a\n */","import Watcher from \"./observer/watcher\";\n\nimport { patch } from \"./vdom/patch\";\n\nexport function mountComponent(vm, el) {\n    const options = vm.$options;\n    vm.$el = el; // 真实的dom 元素\n\n\n    callHook(vm, 'beforeMount');\n\n\n\n\n    // Watcher 就是用来渲染的页面的\n    // vm._render 通过解析render方法 渲染出虚拟dom\n    // vm._update 通过虚拟dom 创建真实的dom\n    // 渲染页面\n    let updateComponent = () => { // 无论渲染还是更新都会执行\n        // 1.返回虚拟dom: vm._render()\n\n        // 2. 把虚拟dom 生成真实的dom, 只有第一次 转成ast 后面都是对比\n        vm._update(vm._render())\n    }\n\n    // 如何渲染? 通过 渲染watcher 每个组件都有一个watcher;\n    //  默认渲染Watcher 不需要回掉函数, 而实例 vm.$watch(()=>{})有\n    new Watcher(vm, updateComponent, () => { }, true) // true 表示这是一个渲染wather\n\n    callHook(vm, 'mounted');\n}\n\n\nexport function lifecycleMixin(Vue) {\n    Vue.prototype._update = function (vnode) {\n        const vm = this;\n        console.log(\"vnode---\", vnode)\n\n        const prevVnode = vm._vnode; // 保存上一次虚拟节点为了实现对比\n\n        // 挂载在实例上 , 每new 一个实例, vm都会一直存在\n        vm._vnode = vnode; // 真实渲染内容\n\n        // 第一次渲染\n        if (!prevVnode) {\n            // 通过虚拟节点 渲染真实的dom, 去替换 真实的el\n            vm.$el = patch(vm.$el, vnode);\n        }else {\n            // 拿到保存的上一次 真实内容 去对比\n            vm.$el =  patch(prevVnode, vnode);\n        }\n\n\n    }\n}\n\n\nexport function callHook(vm, hook) {\n    const handlers = vm.$options[hook];\n\n    // 发布 收集到的 生命周期函数\n    if (handlers) { // 找到对应的钩子 执行\n        for (let i = 0; i < handlers.length; i++) {\n            // 传递this 指向问题 \n            handlers[i].call(vm);\n        }\n    }\n}","import { initState } from \"./state\";\n\nimport { compileToFunction } from \"./compiler/index\";\n\nimport { mountComponent, callHook } from \"./lifecycle\";\n\nimport { mergeOptions } from \"./util/index\"\n\nimport { nextTick } from \"./util/next-tick\";\n\nexport function initMixin(Vue) {\n\n    Vue.prototype._init = function (options) {\n\n        //  数据的劫持\n        const vm = this;\n        // Vue.options\n        // vm.$options = options;\n\n\n        /**\n         * this.$options 指代的是用户传递的属性\n         * 将用户传递的 和全局的Options 合并\n         * 因为 init 可能会被子组件继承 或者子组件初始化调用, 所以用 vm.constructor.options, \n         * 当被 子类继承了以后 ,constructor 指向的就是子类了\n         */\n\n        vm.$options = mergeOptions(vm.constructor.options, options)\n\n        callHook(vm, 'beforeCreate');\n\n        // 初始化状态\n        initState(vm) // 分割代码的写法\n\n        callHook(vm, 'created');\n\n\n        // 如果用户传入el 需要渲染templete\n        if (vm.$options.el) {\n            vm.$mount(vm.$options.el);\n        }\n    }\n    Vue.prototype.$mount = function (el) {\n        const vm = this;\n        const options = vm.$options;\n        // 取dom\n        el = document.querySelector(el)\n\n        /**\n         * options 模版字段 优先级:\n         * render 优先级最高 \n         * template\n         * el\n         * 如果没有 options.render字段\n         */\n        if (!options.render) {\n            let template = options.template // 取出模版\n            if (!template && el) {\n                template = el.outerHTML\n            }\n\n            const render = compileToFunction(template)\n            // 将template 转化为 render方法 vue1.0 是字符串正则  vue2.0 是虚拟dom\n            console.log(\"render------\", render)\n            options.render = render;\n        }\n        // options.render()\n\n        // 渲染当前的组件,挂载这个组件\n        mountComponent(vm, el);\n    }\n\n    // 用户调用的 nextTick\n    Vue.prototype.$nextTick = nextTick;\n}","\nimport { isObject, isReservedTag } from \"../util/index\";\n\nexport function createElement(vm, tag, data = {}, ...children) {\n\n    // ast -> render -> 调用\n    let key = data.key;\n    if (key) {\n        delete data.key\n    }\n\n    // 原生标签的时候\n    if (isReservedTag(tag)) {\n        return vnode(tag, data, key, children, undefined)\n    } else {\n\n        // 从vm 实例上 找到组件的定义 \n        // console.log(\"vm.$options.components--\", vm.$options.components, tag)\n        let Ctor = vm.$options.components[tag];\n        console.log(\"组件----Ctor\", Ctor)\n        return createComponent(vm, tag, data, key, children, Ctor)\n\n    }\n\n}\n\nfunction createComponent(vm, tag, data, key, children, Ctor) {\n    // 如果传的是对象 需要 通过 extend 变成构造函数, 继承父组件方法和属性等\n    if (isObject(Ctor)) {\n        // 构建了当前组件这个类\n        Ctor = vm.$options._base.extend(Ctor)\n    }\n\n    // 组件内部的生命周期\n    data.hook = {\n        init(vnode) {\n            // 当前组件的实例, 虚拟节点上 componentInstance 表示的就是vue实例\n            let child = vnode.componentInstance = new Ctor({ _isComponent: true });\n            // 组件的挂载 \n            child.$mount();\n        }\n    }\n\n    let componentObj = {\n        Ctor, // 组件的构造函数 方便子组件调用其他方法\n        children // 子组件children 是插槽\n    }\n\n    // 组件内部会自动调用 extend; 创建虚拟节点; 组件是没有孩子children的 只有插槽\n    return vnode(`vue-component-${Ctor.cid}-${tag}`, data, key, undefined, undefined, componentObj)\n}\n\n\nexport function createTextNode(text) {\n    return vnode(undefined, undefined, undefined, undefined, text)\n}\n\n/**\n * @description 描述的是真实的dom结构 对象\n * @param {*} tag div 标签\n * @param {*} data 属性\n * @param {*} key  diff key\n * @param {*} children  子节点\n * @param {*} text  文本\n * @componentOptions 组件的options \n * @return 专门产生虚拟节点\n * \n */\nfunction vnode(tag, data, key, children, text, componentOptions) {\n    return {\n        tag,\n        data,\n        key,\n        children,\n        text,\n        componentOptions\n    }\n}\n\n\n\n/**\n * @description 流程:\n *  将template转化成ast语法树-> 生成render方法(字符串拼接)-> 生成虚拟dom->真实的dom\n *  重新生成虚拟dom -> 更新dom\n * \n */","import { createElement, createTextNode } from \"./vdom/create-element\"\nexport function renderMixin(Vue) {\n\n    // this 从实例上取值, 因为上面的 _c,_v,_s 都是vm实例上的方法\n    // _c 创建元素虚拟节点\n    // _v 创建文本虚拟节点\n    // _s  JSON.stringify\n\n    // 所有实例都会 共用 原型上的方法\n    Vue.prototype._c = function () {\n\n        return createElement(this, ...arguments);\n    }\n\n    Vue.prototype._v = function (text) {\n        return createTextNode(text);\n    }\n    Vue.prototype._s = function (val) {\n        return val === null ? '' : (typeof val === 'object' ? JSON.stringify(val) : val)\n    }\n\n\n    Vue.prototype._render = function (vnode) {\n        const vm = this;\n\n        const { render } = vm.$options;\n\n\n        return render.call(vm); // 去实例上 取值\n    }\n}","import { mergeOptions } from \"../util/index\"\n\nexport default function initMixin(Vue) {\n    // 生命周期的合并策略!!!\n    Vue.mixin = function (mixin) {\n        this.options = mergeOptions(this.options, mixin)\n    }\n}\n\n   // Vue.mixin({\n    //     a: 1,\n    //     beforeCreate(a) {\n    //     }\n    // })\n\n    // Vue.mixin({\n    //     b: 2,\n    //     beforeCreate(b) {\n    //     }\n    // })","export const ASSETS_TYPE = [\n    'component',\n    'directive',\n    'filter',\n]","import { ASSETS_TYPE } from \"./const\";\n\n\n// Vue上的方法\nexport default function initAssetRegister(Vue) {\n    ASSETS_TYPE.forEach(type => {\n        Vue[type] = function (id, definition) {\n\n            if (type == 'component') {\n\n                // 注册全局组件\n                // 使用 extend 方法 将对象变为构造函数\n                // 子组件可能也有Vue Component.component方法; 所以统一用父类调用\n                // 不可以❌  definition = this.extend(definition)\n                // this.options._base 永远指向的都是父类\n                definition = this.options._base.extend(definition)\n\n            } else if (type == 'filter') {\n\n            } else if (type === 'directive') {\n\n            }\n\n            // Vue is this; 给Vue 挂上options\n            this.options[type+'s'][id] = definition;\n        }\n    })\n} ","import { mergeOptions } from \"../util/index\";\n\nexport default function initExtend(Vue) {\n\n    // 为什么要有子类和父类 new Vue (Vue构造函数)\n    // 创造子类 继承与父类 扩展的时候都扩展到自己的属性上\n    let cid = 0;\n    Vue.extend = function (extendOptions) {\n        console.log('extendOptions--', extendOptions)\n        const Super = this;\n\n        const Sub = function Vuecomponent(options) {\n            // 这里this 指向子组件; 子组件初始化, 但是子类 没有_init方法,所以需要继承\n            this._init(options)\n        }\n        Sub.cid = cid++;\n        // Object.create 实现继承;但有缺陷;会改变其构造函数\n        Sub.prototype = Object.create(this.prototype)\n        // 把 default prototype 唯一属性 constructor 指向 其本身;\n        Sub.prototype.constructor = Sub;\n\n        // 当前的options 与传递的options 合并 \n        console.log(\"this.options----\", this.options);\n        Sub.options = mergeOptions(\n            this.options,\n            extendOptions\n        )\n        // 子类继承父类;\n        // 还可以拓展 mixin use ???\n\n        // if(Sub.options.props) {\n        //     initProps(Sub)\n        // }\n\n        // Sub.extend = Super.extend;\n        // Sub.mixin = Super.mixin\n        // Sub.use = Super.use\n\n        return Sub;\n    }\n\n\n}","import initMixin from \"./mixin.js\";\n\nimport { ASSETS_TYPE } from \"./const.js\";\nimport initAssetRegister from \"./assets.js\";\nimport initExtend from \"./extend.js\";\n\nexport function initGlobalAPI(Vue) {\n\n    // 整合了所有的全局相关的内容\n    Vue.options = {};\n    initMixin(Vue)\n\n\n    // 初始化全局过滤器,指令 组件; 都要挂载在 options 上\n    ASSETS_TYPE.forEach(type => {\n        Vue.options[type + 's'] = {}\n    });\n\n    Vue.options._base = Vue; // _base 是Vue的构造函数 本身\n\n    // 注册 Extend 方法\n    initExtend(Vue);\n\n\n    initAssetRegister(Vue);\n\n\n}","import { initMixin } from \"./init\";\nimport { renderMixin } from \"./render\";\nimport { lifecycleMixin } from \"./lifecycle\";\nimport { initGlobalAPI } from \"./initGlobalAPI/index\"\n\n// import {diffDemo} from \"./diff-test\";\n\nfunction Vue(options) {\n\n    // 调用了 Vue 的 init 原型方法\n    this._init(options)\n}\n\ninitMixin(Vue)\nrenderMixin(Vue)\nlifecycleMixin(Vue)\n\n\ninitGlobalAPI(Vue)\n\n\n// dif test\n// diffDemo(Vue)\n\nexport default Vue;"],"names":["isObject","data","def","key","value","Object","defineProperty","enumerable","configurable","proxy","vm","source","get","set","newValue","upper","all","letter","toUpperCase","LIFECYCLE_HOOKS","strats","forEach","hook","mergeHook","mergeAssets","parentVal","childVal","res","create","components","concat","mergeOptions","parent","child","options","mergeField","hasOwnProperty","_objectSpread","isReservedTag","tagName","str","obj","split","tag","oldArrayMethods","Array","prototype","arrayMethods","methods","method","args","result","apply","insert","ob","__ob__","slice","observerArray","dep","notify","id","Dep","subs","watcher","push","target","addDep","update","stack","pushTarget","popTarget","pop","length","observe","isObj","Observer","isArray","__proto__","walk","keys","defineReactive","i","dependArray","current","depend","childOb","console","log","initState","opts","$options","props","initData","computed","watch","_data","ncname","gnameCapture","startTagopen","RegExp","endTag","attribute","startTagclose","parseHTML","html","root","currentParent","ELEMENT_TYPE","TEXT_TYPE","createASTElement","attrs","type","children","start","element","chars","text","replace","end","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","item","JSON","stringify","genChildren","el","map","c","gen","join","node","generate","tokens","index","lastIndex","exec","trim","code","compileToFunction","template","renderFn","Function","callbacks","waiting","flushCallback","copies","timerFunc","Promise","p","resolve","then","setImmediate","setTimeout","nextTick","cb","ctx","fun","call","arguments","quene","has","flushSchedularQueue","run","queueWatcher","Watcher","exprOrFn","callback","getter","depsId","Set","deps","add","addSub","patch","oldVnode","vnode","createElm","isRealElement","nodeType","oldElm","parentElm","parentNode","insertBefore","nextSibling","removeChild","replaceChild","texContent","updateProperties","oldChildren","newChildren","updateChildren","appendChild","innerHTML","isSameVnode","newVnode","makeIndexByKey","oldStartIndex","oldStartVnode","oldEndIndex","oldEndVnode","newStartIndex","newStartVnode","newEndIndex","newEndVnode","moveIndex","moveVnode","undefined","insertNode","createComponent","init","componentInstance","$el","document","createElement","createTextNode","oldProps","newProps","newStyle","style","oldStyle","removeAttribute","styleName","className","setAttribute","mountComponent","callHook","updateComponent","_update","_render","lifecycleMixin","Vue","prevVnode","_vnode","handlers","initMixin","_init","constructor","$mount","querySelector","render","outerHTML","$nextTick","Ctor","_base","extend","_isComponent","componentObj","cid","componentOptions","renderMixin","_c","_v","_s","val","mixin","ASSETS_TYPE","initAssetRegister","definition","initExtend","extendOptions","Sub","Vuecomponent","initGlobalAPI"],"mappings":"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"}